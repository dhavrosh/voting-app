version: "3"

services:

  gateway:
    build: ./gateway
    ports: 
      - 80:80
    links:
      - "vote"
    restart: always
    networks:
      - front-tier

  vote:
    build: ./vote
    container_name: vote
    command: npm start
    environment:
      - RHOST=redis
      - RLIST_NAME=votes
    volumes:
      - ./vote:/app
      - ./vote/node_modules:/app/node_modules
      - ./tsconfig-base.json:/tsconfig-base.json
      - ./common:/common
    restart: on-failure
    networks:
      - front-tier
      - back-tier
    depends_on:
      - redis

  worker:
    build: ./worker
    container_name: worker
    expose:
     - "8080"
    ports:
     - "8080:8080"
    environment:
      - RHOST=redis
      - RLIST_NAME=votes
    volumes:
      - ./worker:/app
      - ./worker/node_modules:/app/node_modules
      - ./tsconfig-base.json:/tsconfig-base.json
      - ./common:/common
    restart: on-failure
    networks:
      - back-tier
    depends_on:
      - redis

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - redis-data:/data
    ports: ["6379"]
    networks:
      - back-tier

volumes:
  redis-data:

networks:
  front-tier:
  back-tier: